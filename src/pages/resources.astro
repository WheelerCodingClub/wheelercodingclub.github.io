---
import Layout from "~/layouts/Layout.astro";

import CopyAnchor from "~/components/CopyAnchor.astro";
import Splash from "~/components/Splash.astro";

import logo from "~/assets/images/logo.png";
import splash from "~/assets/images/learning.webp";
---

<Layout
    title="Resources - Wheeler Coding Club"
    description="Find resources to help you learn how to code."
    page="resources"
    og={{
        title: "Resources",
        image: logo.src,
    }}
>
    <Splash image={splash.src}>
        <h1 class="h2">Resources</h1>
        <h3>Want to learn more about coding? Here's a list of resources to help you!</h3>
    </Splash>

    {/* CODING RESOURCES NAVBAR */}
    <div class="placeholder-nav d-md-block d-none">
        <nav id="resources-nav" class="navbar navbar-expand-md text-center">
            <div class="container">
                <ul class="navbar-nav mx-auto w-100 justify-content-between">
                    <li class="nav-item">
                        <a class="nav-link" href="#basics">Basics</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#data-science">Data Science</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#web-dev">Web Dev</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#app-dev">App Dev</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#game-dev">Game Dev</a>
                    </li>
                </ul>
            </div>
        </nav>
    </div>

    {/* CODING RESOURCES */}
    <div id="coding-resources" class="content-container">
        <div class="container">
            {/* BASICS */}
            <div id="basics" class="row resource-category">
                <div class="col-md-12">
                    <div class="resource-title-wrapper">
                        <a data-show="basic-resources" class="show-more-link">
                            <i class="show-more fas fa-angle-right"></i>
                            <h2>THE BASICS</h2>
                        </a>
                        <CopyAnchor id="basics" />
                    </div>
                    
                    <br>
                    
                    <div id="basic-resources" class="resource-content">
                        <h3>Beginner Resources</h3>
                        <p>If this is your first time programming, you should start out by learning the basic logic of programming and learn a beginner-level functional programming language such as Python or JavaScript. Here are some resources to help you get started:</p>
                        <ul>
                            <li>
                                <h4>General Resources</h4>
                                <ul>
                                    <li>
                                        <p><a target="_blank" href="https://scratch.mit.edu/">Scratch</a> (block programming to help teach the logic of programming)</p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://www.codecademy.com/">Codecademy</a></p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://code.org/">Code.org</a></p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://www.khanacademy.org/computing">Khan Academy</a></p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://www.codeconquest.com/">Code Conquest</a></p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://www.sololearn.com/">SoloLearn</a></p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://ischoolonline.berkeley.edu/blog/python-practice-problems/">UC Berkeley Python Practice Problems</a></p>
                                    </li>
                                </ul>
                            </li>
                            <li>
                                <h4>More structured classes</h4>
                                <ul>
                                    <li>
                                        <p><a target="_blank" href="https://www.edx.org/">edX</a> (you can find hundreds of free CS courses here)</p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://ocw.mit.edu/index.htm">MIT Open Courseware</a></p>
                                    </li>
                                </ul>
                            </li>
                        </ul>

                        <h3>Advanced Resources</h3>
                        <p>After gaining some experience with functional programming, object-oriented programming (OOP) is the next step. Python and JavaScript support OOP as well as functional programming, so it may be easier to add on to your knowledge of Python and JavaScript rather than learning a completely new language. Here are a few OOP languages:</p>
                        <ul>
                            <li>
                                <h4>Java</h4>
                                <ul>
                                    <li>
                                        <p><a target="_blank" href="https://www.codecademy.com/learn/learn-java">Codecademy Java Tutorial</a></p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://www.w3schools.com/java/default.asp">W3Schools Java Tutorial</a></p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://www.tutorialspoint.com/java/index.htm">Tutorialspoint Java Tutorial</a> (has more advanced topics)</p>
                                    </li>
                                </ul>
                            </li>
                            <li>
                                <h4>C++</h4>
                                <ul>
                                    <li>
                                        <p><a target="_blank" href="https://www.codecademy.com/learn/learn-c-plus-plus">Codecademy C++ Tutorial</a></p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://www.w3schools.com/cpp/">W3Schools C++ Tutorial</a></p>
                                    </li>
                                    <li>
                                        <p><a target="_blank" href="https://www.tutorialspoint.com/cplusplus/">Tutorialspoint C++ Tutorial</a> (has more advanced topics)</p>
                                    </li>
                                </ul>
                            </li>
                        </ul>

                        <h3>Code Sharing Tools</h3>
                        <p>Code sharing tools are essential when you're collaborating with others on projects.</p>
                        <ul>
                            <li>
                                <h4><a target="_blank" href="https://github.com/">GitHub</a></h4>
                                <p>GitHub allows you to share the code for your projects publicly (which will help display your knowledge to employers in the future) and it allows multiple people to easily collaborate on a project.</p>
                                <ul>
                                    <li>
                                        <h4>Getting Set Up</h4>
                                        <p>To start using GitHub, <a target="_blank" href="https://github.com/join">create a new GitHub account</a>. After that, follow this guide to set up Git on your computer: <a target="_blank" href="https://docs.github.com/en/free-pro-team@latest/github/getting-started-with-github/set-up-git#setting-up-git">Setting Up Git (Guide)</a>.</p>
                                    </li>
                                    <li>
                                        <h4>Additional Resources</h4>
                                        <p><a target="_blank" href="https://docs.github.com/en/free-pro-team@latest/github/importing-your-projects-to-github/adding-an-existing-project-to-github-using-the-command-line">Pushing a Project to GitHub Using Git</a></p>
                                        <p><a target="_blank" href="https://education.github.com/git-cheat-sheet-education.pdf">Git Cheat Sheet</a></p>
                                    </li>
                                </ul>
                            </li>
                            <li>
                                <h4>Other Git hosts:</h4>
                                <p>
                                    <a target="_blank" href="https://bitbucket.org/">BitBucket</a>,
                                    <a target="_blank" href="https://codeberg.org/">Codeberg</a>,
                                    <a target="_blank" href="https://gitlab.com/">GitLab</a>
                                </p>
                            </li>
                        </ul>

                        <h3>Creative Coding</h3>
                        <p>The creative coding frameworks below can be used for interactive graphics, games, and procedural art. They're a fun way to get started programming, especially thanks to their visual aspect. They both have extensive tutorials and documentation as well as a helpful community.</p>
                        <ul>
                            <li>
                                <h4><a target="_blank" href="https://processing.org/">Processing</a> (Java/<a target="_blank" href="https://py.processing.org/tutorials/gettingstarted/">Python</a>, native)</h4>
                            </li>
                            <li>
                                <h4><a target="_blank" href="https://p5js.org/">p5.js</a> (JavaScript, browser)</h4>
                            </li>
                        </ul>
                        <p><a target="_blank" href="https://thecodingtrain.com/">The Coding Train</a> is an educational YouTube channel that covers Processing and p5.js and showcases many <a target="_blank" href="https://thecodingtrain.com/challenges">coding challenges</a>.</p>
                    </div>
                </div>
            </div>

            <div id="data-science" class="row resource-category">
                <div class="col-md-12">
                    <div class="resource-title-wrapper">
                        <a data-show="data-science-resources" class="show-more-link">
                            <i class="show-more fas fa-angle-right"></i>
                            <h2>DATA SCIENCE</h2>
                        </a>
                        <CopyAnchor id="data-science" />
                    </div>

                    <br>

                    <div id="data-science-resources" class="resource-content">
                        <h3>Getting Set Up</h3>
                        <ul>
                            <li><p>For data science on your local machine, you should install <a target="_blank" href="https://jupyter.org/">Jupyter Notebook</a>.</p></li>
                            <li><p>You can also use <a target="_blank" href="https://colab.research.google.com/">Google Colab</a> to write and execute Python code in your browser.</p></li>
                            <li><p>Using <a target="_blank" href="https://www.kaggle.com/kernels">Kaggle Notebooks</a> may be better than the above options if you're doing a Kaggle competition.</p></li>
                        </ul>

                        <h3>Beginner Resources</h3>
                        <p>Data science at its core attempts to find relationships in data. This can be done using supervised or unsupervised learning. Read <a target="_blank" href="https://medium.com/@gowthamy/machine-learning-supervised-learning-vs-unsupervised-learning-f1658e12a780">this article</a> to find out more. Here are a few of the topics that are in data science:</p>
                        <ul>
                            <li>
                                <h4>Regressions (Single and Multivariable)</h4>
                                <ul>
                                    <li><p>Linear Regression</p></li>
                                    <li><p>Logistic Regression</p></li>
                                    <li><p>Polynomial Regression</p></li>
                                </ul>
                            </li>
                            <li>
                                <h4>Decision Trees</h4>
                            </li>
                            <li>
                                <h4>Neural Networks</h4>
                            </li>
                            <li>
                                <h4>Support Vector Machines</h4>
                            </li>
                            <li>
                                <h4>Principal Component Analysis</h4>    
                            </li>
                            <li>
                                <h4>K-Nearest Neighbor and K-Means Clustering</h4>
                            </li>
                            <li>
                                <h4>Multivariate Gaussian Distributions for Anomaly Detection</h4>
                            </li>
                            <li>
                                <h4>Collaborative Filtering</h4>
                            </li>
                        </ul>
                        <p>There are a few smaller models, but for now, you should start looking up Medium articles on these topics. I find that the people there are very good at explaining the concepts that drive these models. Before this, though, you would also want to know either Python or R (I strongly recommend Python). Here's a few resources for Python and the topics above:</p>
                        <ul>
                            <li>
                                <h4><a target="_blank" href="https://www.datacamp.com/">DataCamp</a></h4>
                            </li>
                            <li>
                                <h4><a target="_blank" href="https://www.coursera.org/learn/machine-learning">Coursera (makes you code in MATLAB)</a></h4>
                            </li>
                            <li>
                                <h4><a target="_blank" href="https://www.udemy.com/">Udemy (requires you to pay)</a></h4>
                            </li>
                        </ul>

                        <h3>Advanced Resources</h3>
                        <p>If you are at this stage, you know all of the topics above, but likely haven't explored the full depth of neural networks. Try learning about the internals of the neural network and learning about the following components too:</p>
                        <ul>
                            <li>
                                <h4>RNNs (Recurrent Neural Network)</h4>
                            </li>
                            <li>
                                <h4>LSTMs (Long Short-Term Memory)</h4>
                            </li>
                            <li>
                                <h4>CNNs (Convolutional Neural Network)</h4>
                            </li>
                            <li>
                                <h4>Batch Normalization</h4>
                            </li>
                            <li>
                                <h4>Regularization</h4>
                            </li>
                            <li>
                                <h4>Optimization Methods</h4>
                                <ul>
                                    <li><p>Adam</p></li>
                                    <li><p>Nadam</p></li>
                                    <li><p>Adagrad</p></li>
                                    <li><p>RMSprop</p></li>
                                    <li><p>SGD</p></li>
                                </ul>
                            </li>
                            <li>
                                <h4>GRUs (Gated Recurrent Unit)</h4>
                            </li>
                            <li>
                                <h4>Embedding Layers</h4>
                            </li>
                            <li>
                                <h4>Activation Layers</h4>
                            </li>
                        </ul>
                        <p>The <a target="_blank" href="https://www.tensorflow.org/tutorials">TensorFlow tutorials</a> and Medium articles will be your best resources here. At this stage, you should also try learning about a bit of reinforcement learning and building some applications based on what you have learned so far in data science. There is a good book on the subject <a target="_blank" href="https://nnfs.io/">here</a>, but you can also look up the topics in it if you want to learn more.</p>

                        <h3>Project Ideas</h3>
                        <ul>
                            <li><p>Make a neural network from scratch</p></li>
                            <li><p>Medical imaging project</p></li>
                            <li><p>Recommendation system</p></li>
                            <li><p>Stock price predictor</p></li>
                        </ul>
                    </div>

                </div>
            </div>

            {/* WEB DEVELOPMENT */}
            <div id="web-dev" class="row resource-category">
                <div class="col-md-12">
                    <div class="resource-title-wrapper">
                        <a data-show="web-dev-resources" class="show-more-link">
                            <i class="show-more fas fa-angle-right"></i>
                            <h2>WEB DEVELOPMENT</h2>
                        </a>
                        <CopyAnchor id="web-dev" />
                    </div>
                    
                    <br>

                    <div id="web-dev-resources" class="resource-content">
                        <h3>Getting Set Up</h3>
                        <ul>
                            <li>
                                <p>I recommend <a target="_blank" href="https://code.visualstudio.com/">Visual Studio Code (VS Code)</a> as an IDE.</p>
                            </li>
                            <li>
                                <p>This isn't necessary, but I prefer to use <a target="_blank" href="https://git-scm.com/downloads">Git Bash</a> as an integrated terminal in VS Code. If you need help configuring it, you can consult <a target="_blank" href="https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration">this</a>.</p>
                            </li>
                            <li>
                                <p>For both frontend and backend web development, you'll likely need to install <a target="_blank" href="https://nodejs.org/">Node.js and Node Package Manager (which comes with Node.js)</a></p>
                            </li>
                            <li>
                                <p>For backend web development, additional installations (including other IDEs) may be needed depending on your choice of framework. For IDEs and required installations for specific programming languages, see <a href="#basics">THE BASICS</a> section.</p>
                            </li>
                        </ul>

                        <h3>Basics</h3>
                        <p>I recommend learning about HTML, CSS, and JavaScript before using web frameworks. These 3 languages are the most important web languages. After that, move on to frontend web development and design, and once you become familiar with frontend, you should move on to backend development. Here are the best general web development resources:</p>
                        <ul>
                            <li>
                                <h4><a target="_blank" href="https://www.w3schools.com/">W3Schools</a></h4>
                            </li>
                            <li>
                                <h4><a target="_blank" href="https://developer.mozilla.org/en-US/docs/Learn">MDN Web Docs</a></h4>
                            </li>
                        </ul>
                        <p>Also, I'd recommend learning about the following (this stuff is mostly conceptual at a beginner level, but you'll become more familiar with it as you begin implementing it):</p>
                        <ul>
                            <li>
                                <h4><a target="_blank" href="https://www.freecodecamp.org/news/what-is-an-api-in-english-please-b880a3214a82/">APIs</a></h4>
                            </li>
                            <li>
                                <h4><a target="_blank" href="https://www.sitepoint.com/developers-rest-api/">REST API</a></h4>
                            </li>
                            <li>
                                <h4><a target="_blank" href="https://www.w3schools.com/xml/ajax_intro.asp">AJAX</a></h4>
                            </li>
                            <li>
                                <h4><a target="_blank" href="https://www.tutorialspoint.com/mvc_framework/index.htm">Model-view-controller</a></h4>
                            </li>
                        </ul>

                        <h3>Design</h3>
                        <p>The best way to get good at design is to practice! As you begin doing more and more web design, you'll start noticing small details on company websites that can be applied to your own websites. However, for beginners, here are some helpful starting points for design:</p>
                        <ul>
                            <li>
                                <h4>Color Scheme</h4>
                                <p>A consistent color scheme is vital for websites! This article explains basic color theory very well: <a target="_blank" href="https://neilpatel.com/blog/website-color-scheme/">https://neilpatel.com/blog/website-color-scheme/</a></p>
                            </li>
                            <li>
                                <h4>Frameworks</h4>
                                <p><a target="_blank" href="https://getbootstrap.com/docs/4.5/getting-started/introduction/">Bootstrap</a> (most well-known CSS framework)</p>
                                <p><a target="_blank" href="https://materializecss.com/">Materialize CSS</a></p>
                                <p><a target="_blank" href="https://tailwindcss.com/">Tailwind CSS</a></p>
                            </li>
                            <li>
                                <h4>More Resources</h4>
                                <p>This is a huge list of resources if you're looking for something specific: <a target="_blank" href="https://github.com/bradtraversy/design-resources-for-developers">https://github.com/bradtraversy/design-resources-for-developers</a></p>
                            </li>
                        </ul>

                        <h3>Frontend Web Development</h3>
                        <p>Frontend web development mainly involves coding the user interface/user experience (UI/UX) of a webpage. You can use vanilla JavaScript for frontend web development, and I'd suggest doing at least one project using vanilla JS to become familiar with it, but frameworks make development easier. Here's a few of the top frontend frameworks worth learning how to use:</p>
                        <ul>
                            <li>
                                <h4><a target="_blank" href="https://jquery.com/">jQuery</a></h4>
                                <p>jQuery is very easy to learn and it's convenient, but it's slowly becoming outdated in the web development community in favor of other frameworks. Nonetheless, it's good to know it - I just don't recommend it being the only frontend framework you learn.</p>
                                <p><a target="_blank" href="https://www.w3schools.com/jquery/">W3Schools jQuery Tutorial</a></p>
                            </li>
                            <li>
                                <h4><a target="_blank" href="https://reactjs.org/">React</a></h4>
                                <p>React is one of the most popular frameworks right now. It's harder to learn initially, but it makes your code more organized (which is better for long-term projects that need to be maintained), and it's better to use React rather than jQuery for large projects.</p>
                                <p><a target="_blank" href="https://reactjs.org/tutorial/tutorial.html">Official React Tutorial</a></p>
                                <p><a target="_blank" href="https://www.youtube.com/watch?v=sBws8MSXN7A">YouTube - React Crash Course</a></p>
                            </li>
                            <li>
                                <h4>Other frameworks worth researching:</h4>
                                <p>
                                    <a target="_blank" href="https://angularjs.org/">Angular</a>,
                                    <a target="_blank" href="https://vuejs.org/">Vue.js</a>,
                                    <a target="_blank" href="https://emberjs.com/">Ember.js</a>,
                                    <a target="_blank" href="https://svelte.dev/">Svelte</a>
                                </p>
                            </li>
                        </ul>

                        <h3>Backend Web Development</h3>
                        <p>Backend development essentially gives a website its functionality and makes a website dynamic; it allows users to make accounts and generate posts on your website. Depending on your needs, you might need to learn an additional programming language for backend web development. Here's a few notable frameworks in various languages:</p>
                        <ul>
                            <li>
                                <h4>Express (JavaScript)</h4>
                                <p>If you're already familiar with JavaScript, Express would be easiest for you since it's a framework for Node.js, which is a JS runtime environment. Node.js has a lot of various packages as well, which is helpful for large projects.</p>
                                <p><a target="_blank" href="https://nodejs.org/en/">Get Node.js</a></p>
                                <p><a target="_blank" href="https://expressjs.com/en/starter/installing.html">Installing Express</a></p>
                                <p><a target="_blank" href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction">Express Tutorial</a></p>
                            </li>
                            <li>
                                <h4>Django (Python)</h4>
                                <p>If you're coming from a Python background, this might be easiest for you.</p>
                                <p><a target="_blank" href="https://docs.djangoproject.com/en/3.1/">Docs</a></p>
                                <p><a target="_blank" href="https://docs.djangoproject.com/en/3.1/intro/tutorial01/">Official Django Tutorial</a></p>
                            </li>
                            <li>
                                <h4>MySQL (not a framework)</h4>
                                <p>If you use a framework that supports ORM (object-relational mapping), you won't need to write raw SQL queries, but it's still good to know SQL because it teaches you how to best store data.</p>
                                <p><a target="_blank" href="https://www.w3schools.com/sql/">W3Schools SQL Tutorial</a></p>
                            </li>    
                            <li>
                                <h4>Other frameworks worth researching:</h4>
                                <p>
                                    <a target="_blank" href="https://nextjs.org/">Next.js</a> (JavaScript),
                                    <a target="_blank" href="https://laravel.com/">Laravel</a> (PHP),
                                    <a target="_blank" href="https://rubyonrails.org/">Ruby on Rails</a> (Ruby),
                                    <a target="_blank" href="https://spring.io/">Spring</a> (Java)
                                </p>
                            </li>
                        </ul>

                        <h3>Project Ideas</h3>
                        <p>The best way to learn is through doing projects! Through trial and error, you'll gain experience. If you get stuck, Google how to do something or ask for help in the Coding Club Discord server. If you have a website idea in mind, pick a frontend and/or backend framework and try to implement it. If you need project ideas, here's a list of ideas to inspire you:</p>
                        <ul>
                            <li><p>A hangman game</p></li>
                            <li><p>A quiz game</p></li>
                            <li><p>A personal/portfolio site about you</p></li>
                            <li><p>Use the giphy API</p></li>
                            <li><p>Task list/a productivity app</p></li>
                            <li><p>A chat app</p></li>
                        </ul>
                    </div>
                    
                </div>
            </div>

            {/* APP DEVELOPMENT */}
            <div id="app-dev" class="row resource-category">
                <div class="col-md-12">
                    <div class="resource-title-wrapper">
                        <a data-show="app-dev-resources" class="show-more-link">
                            <i class="show-more fas fa-angle-right"></i>
                            <h2>MOBILE APP DEVELOPMENT</h2>
                        </a>
                        <CopyAnchor id="app-dev" />
                    </div>

                    <br>

                    <div id="app-dev-resources" class="resource-content">
                        <h3>Getting Set Up</h3>
                        <ul>
                            <li>
                                <p>If you decide to use Flutter or React Native, I recommend using <a target="_blank" href="https://code.visualstudio.com/">Visual Studio Code (VS Code)</a> as an IDE.</p>
                            </li>
                            <li>
                                <p>For Android development you'll need <a target="_blank" href="https://developer.android.com/studio">Android Studio</a>.</p>
                            </li>
                            <li>
                                <p>For iOS development, you can use <a target="_blank" href="https://developer.apple.com/xcode/">Xcode</a>.</p>
                            </li>
                        </ul>

                        <h3>Both iOS and Android</h3>
                        <ul>
                            <li>
                                <h4>Flutter</h4>
                                <p>Flutter uses the programming language Dart, which is object-oriented and has C-style syntax.</p>
                                <p><a target="_blank" href="https://www.youtube.com/watch?v=1ukSR1GRtMU&list=PL4cUxeGkcC9jLYyp2Aoh6hcWuxFDX6PBJ">YouTube Tutorials</a></p>
                                <p><a target="_blank" href="https://flutter.dev/docs">Docs</a></p>
                                <p><a target="_blank" href="https://pub.dev/">Packages</a></p>
                            </li>
                            <li>
                                <h4>React Native</h4>
                                <p>If you're familiar with web development, React Native is in JavaScript and might be easier for you.</p>
                                <p><a target="_blank" href="https://reactnative.dev/docs/getting-started">Docs</a></p>
                                <p><a target="_blank" href="https://www.youtube.com/watch?v=mkualZPRZCs">YouTube - React Native Crash Course</a></p>
                            </li>
                        </ul>

                        <h3>Android</h3>
                        <p><a target="_blank" href="https://developer.android.com/docs">Click here for the official Android Studio docs (for both Kotlin and Java)</a></p>
                        <ul>
                            <li>
                                <h4>Kotlin</h4>
                                <p>Kotlin is the preferred language for Android development.</p>
                                <p><a target="_blank" href="https://developer.android.com/kotlin">Docs</a></p>
                                <p><a target="_blank" href="https://www.youtube.com/watch?v=Ob4vSoWud9k&list=PLt72zDbwBnAX9UeFwoh-lSZb5c_XrOOf7">YouTube - Tutorial Playlist</a></p>
                            </li>
                            <li>
                                <h4>Java</h4>
                                <p>Java is more popular than Kotlin and is widely used outside of app development. If you've taken AP Computer Science A, you will already have experience with Java, so app development with Java might be easier for you.</p>
                                <p><a target="_blank" href="https://www.youtube.com/watch?v=TWS4WAVqGN0&list=PL_c9BZzLwBRJLm0QETVj_XcN4jRsV4LkR&index=2">YouTube - Tutorial Playlist</a></p>
                            </li>
                        </ul>

                        <h3>iOS</h3>
                        <p>For iOS development, you can learn either Swift or Objective-C. However, Swift is favored over Objective-C (which is considered outdated).</p>
                        <ul>
                            <li>
                                <h4>Swift</h4>
                                <p>Swift is highly recommended for iOS development.</p>
                                <p><a target="_blank" href="https://swift.org/documentation/">Swift Docs</a></p>
                                <p><a target="_blank" href="https://developer.apple.com/library/archive/referencelibrary/GettingStarted/DevelopiOSAppsSwift/">Official Swift Tutorial</a></p>
                            </li>
                        </ul>

                        <h3>Project Ideas</h3>
                        <p>Be creative! If you have past projects, you can try to make one of them into a mobile app. Here's a few ideas for apps you can make if you need inspiration:</p>
                        <ul>
                            <li><p>Calculator app</p></li>
                            <li><p>Exercise tracker</p></li>
                            <li><p>To-do list</p></li>
                            <li><p>Painting/drawing app</p></li>
                            <li><p>Contact tracing app (challenging but relevant)</p></li>
                        </ul>
                    </div>

                </div>
            </div>

            {/* GAME DEVELOPMENT */}
            <div id="game-dev" class="row resource-category">
                <div class="col-md-12">
                    <div class="resource-title-wrapper">
                        <a data-show="game-dev-resources" class="show-more-link">
                            <i class="show-more fas fa-angle-right"></i>
                            <h2>GAME DEVELOPMENT</h2>
                        </a>
                        <CopyAnchor id="game-dev" />
                    </div>

                    <br>

                    <div id="game-dev-resources" class="resource-content">
                        <h3>Getting Set Up</h3>
                        <ul>
                            <li>
                                <p>Unity and Unreal Engine are two of the most popular game engines. Here's something that can help you decide which one to go with: <a target="_blank" href="https://gamedevacademy.org/unity-vs-unreal/">https://gamedevacademy.org/unity-vs-unreal/</a>.</p>
                            </li>
                            <li>
                                <p>You can use <a target="_blank" href="https://visualstudio.microsoft.com/vs/">Visual Studio</a> as an IDE for both Unity and Unreal Engine.</p>
                            </li>
                            <li>
                                <p>P.S. A lot of programming languages have packages or libraries specifically for game development. A few include <a target="_blank" href="https://www.pygame.org/">Pygame (Python)</a> and <a target="_blank" href="https://www.melonjs.org/">MelonJS (JavaScript)</a>.</p>
                            </li>
                        </ul>
                        
                        <h3>Unity</h3>
                        <ul>
                            <li>
                                <p><a target="_blank" href="https://store.unity.com/#plans-individual">Download Unity</a></p>
                            </li>
                            <li>
                                <p><a target="_blank" href="https://docs.unity3d.com/Manual/index.html">Manual</a></p>
                            </li>
                            <li>
                                <p><a target="_blank" href="https://learn.unity.com/">Official Tutorials</a></p>
                            </li>
                            <li>
                                <p><a target="_blank" href="https://www.youtube.com/channel/UCRMXHQ2rJ9_0CHS7mhL7erg">Jimmy Vegas</a> on YouTube has a variety of different game tutorials for Unity that you can follow. <a target="_blank" href="https://www.youtube.com/watch?v=LT_v2gjYjjQ&list=PLZ1b66Z1KFKj4s_1pXbG8ee3Lq2rX7qIP">This playlist</a> covers a lot of the Unity basics.</p>
                            </li>
                        </ul>

                        <h3>Unreal Engine</h3>
                        <ul>
                            <li>
                                <p><a target="_blank" href="https://www.unrealengine.com/en-US/download">Download Unreal Engine</a></p>
                            </li>
                            <li>
                                <p><a target="_blank" href="https://docs.unrealengine.com/en-US/index.html">Docs</a></p>
                            </li>
                            <li>
                                <p><a target="_blank" href="https://www.unrealengine.com/en-US/onlinelearning-courses">Official Tutorials</a></p>
                            </li>
                        </ul>

                        <h3>Project Ideas</h3>
                        <ul>
                            <li><p>Platformer game</p></li>
                            <li><p>Recreate Minecraft</p></li>
                            <li><p>First person shooter game</p></li>
                            <li><p>Recreate one of your favorite games</p></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</Layout>

<script>
    const nav = document.getElementById("resources-nav")!;
    const fromTop = nav.offsetTop;

    // scrolled resources nav
    const onScroll = () => {
        nav.classList.toggle("sticky-scroll", window.scrollY >= fromTop - 30);
    }
    onScroll();
    window.addEventListener("scroll", onScroll);

    document.querySelectorAll(".show-more-link").forEach((link) => {
        const section = document.getElementById(link.getAttribute("data-show")!)!;
        const icon = link.querySelector(".show-more")!;
        link.addEventListener("click", () => {
            if (section.clientHeight === 0) {
                // open if closed
                section.style.height = "100%";
                icon.classList.add("active");
            } else {
                // close if opened
                section.style.height = "0";
                icon.classList.remove("active");
            }
        });
    });

    // activate section open arrows if the screen width is greater than 768px
    // (because that's the screen size the sections automatically open to based on the CSS)
    if (window.matchMedia("(min-width: 768px)").matches) {
        document.querySelectorAll(".show-more").forEach((icon) => {
            icon.classList.add("active");
        })
    }
</script>
